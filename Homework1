/*
 * Anna Calvert
 * Cpts323
 * C# Program Hw1
 */
//C:\\temp\\File.txt ISFRIEND TargetX
using System;                           //using System.IO
using System.IO;                        //parse
using System.Linq;                      //parse
using System.Text.RegularExpressions;   //tokenize regular expression

namespace Project1
{
    class Proj
    {
        static void Main(string[] args)                                                                                      //main function
        {

            /*
             *  //user input:
                Console.WriteLine("Please enter test " + i);
                test[i] = Console.Read();
                Console.ReadLine();
             */


            string[] fileContent;
            //char[] lineContent;
            Console.WriteLine("\nNumber of command line parameters = {0}", args.Length);                                     //number cmd line args

            for (int i = 0; i < args.Length; i++) {                                                                          //cmd line args
                Console.WriteLine("Arg[{0}] = [{1}]", i, args[i]);
            }
            Console.WriteLine("\n");

            if (args.Length == 0) {                                                                                         //if no cmd args, error
                Console.WriteLine("ERROR: must enter file name.");
            }

            string fileName = args[0];
            var doesExist = System.IO.File.Exists(fileName); 
            if (!doesExist) {
                Console.WriteLine("The file does not exist.");                                                              //error if file does not exist
                return;
            }
            fileContent = System.IO.File.ReadAllLines(fileName);



            bool targetPresent = args.Length == 3 ? true : false;                                                          //Terniary operator: if 3 args then true, else false

            if (args.Length > 1)
            {
                char[] delimiterChar = { '=' };
                string[] words;
                switch (args[1])
                {
                    case "PRINT":
                        if (targetPresent)                                                                                 //if target info present
                        {
                            bool found = false;
                            string target = "Name=" + args[2];
                            //Console.WriteLine("Target = {0}", target);                        
                            for (int i = 0; i < fileContent.Length; i++)                                                   //search text file
                            {
                                if (fileContent[i].EndsWith(target))                                                       //when find target name 
                                {
                                    for (int j = i; (fileContent[j] != "[Target]") && (j < fileContent.Length); j++) {     //print current target data
                                        Console.WriteLine(fileContent[j]);
                                    }
                                    found = true;
                                    break;
                                }
                            }
                            if (!found) {
                                Console.WriteLine("Target does not exist.\n");                                              //if not found, message
                            }
                        }
                        else
                        {
                            Console.WriteLine("\n");
                            Console.WriteLine("List lines containing 'Name=' :");
                            for (int i = 0; i < fileContent.Length; i++)
                            {
                                if (fileContent[i].Contains("Name=")) {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);
                                    Console.WriteLine(words.Last());
                                }

                            }
                        }
                        break;
                    case "CONVERT":

                        for (int i = 0; i < fileContent.Length; i++)
                        {//search text file

                            
                            

                                if (fileContent[i].Contains("Name="))
                                {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);

                                    if (words.Last() == "TargetOne")
                                    {
                                        words[1] = "getOneTaray";
                                    }
                                    Console.WriteLine(words[1]);
                                    
                                }
                                if (fileContent[i].Contains("Name="))
                                {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);

                                    if (words.Last() == "TargetTwo")
                                    {
                                        words[1] = "getTwoTaray";
                                    }
                                    Console.WriteLine(words[1]);
                                    
                                }
                                if (fileContent[i].Contains("Name="))
                                {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);

                                    if (words.Last() == "Enemy")
                                    {
                                        words[1] = "Enemyway";
                                    }
                                    Console.WriteLine(words[1]);
                                }
                                if (fileContent[i].Contains("Name="))
                                {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);

                                    if (words.Last() == "TargetX")
                                    {
                                        words[1] = "getXTaray";
                                    }
                                    Console.WriteLine(words[1]);
                                }
                                if (fileContent[i].Contains("Name="))
                                {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);

                                    if (words.Last() == "TargetY")
                                    {
                                        words[1] = "getYTaray";
                                    }
                                    Console.WriteLine(words[1]);
                                }
                                if (fileContent[i].Contains("Name="))
                                {                                                     //print target names
                                    words = fileContent[i].Split(delimiterChar);

                                    if (words.Last() == "EnemyZ")
                                    {
                                        words[1] = "EnemyZway";
                                    }
                                    Console.WriteLine(words[1]);
                                }
                                // else
                                //  Console.WriteLine("none");

                                
                        }
                        //if (targetPresent) {
                            
                            //for (int i = 0; i < fileContent.Length; i++)
                           // {
                               // lineContent = System.IO.File.ReadAllText(fileContent);

                            
                               //char ch;
                               //int Tchar = 0;
                            //char ch = ' ';
                               //StreamReader fileReader;
                               //StreamReader fileReader = new StreamReader(args[0]); //
                               //do
                               //{
                               //    string str = 
                               //     ch = (char)fileReader.Read(); 
                               //
                               //        //foreach (var ch in chars)
                               //     char chL = char.ToLower(c1);
                                   /*                                    
                                                     For words that begin with consonant sounds (bcd fgh jklmn pqrst vwx z), 
                                                     the initial consonant or consonant cluster is moved to the end of the word, 
                                                     and "ay" is added:
             
                                                          "pig" → "igpay"
                                                          "banana" → "ananabay"
                                                          "trash" → "ashtray"
                                                          "happy" → "appyhay"
                                                          "duck" → "uckday"
                                                          "glove" → "oveglay"
              
                                                  For words that begin with vowel sounds or silent letter, (aeiouy)   //ignore silent letter?
                                                      one just adds "way" to the end:
                                                 
                                                          "egg" → "eggway"
                                                          "inbox" → "inboxway"
                                                          "eight" → "eightway"  
                                     */
                       // string word = "";
                       // System.IO.StreamReader file = new System.IO.StreamReader(args[0]);
                       // while ((wro = file.ReadLine()) != null)
                       // {
                       //     
                       //         if (word == "")
                       //         {
                       //             word = "<empty>";
                       //         }
                       //         this.combo.Items.Add(word);
                       //    
                       //
                       //     
                       // }

                        break;
                    case "ISFRIEND":                                                                                        //isfriend
                        if (targetPresent) {
                            bool found = false;
                            string target = "Name=" + args[2];
                            for (int i = 0; i < fileContent.Length; i++)
                            {
                                if (fileContent[i].EndsWith(target))                                                        //find target name
                                {
                                    for (int j = i; (fileContent[j] != "[Target]") && (j < fileContent.Length); j++)
                                    {
                                        if (fileContent[j] == "Friend=true") {                                              //if target Friend=true is found
                                            Console.WriteLine("Aye Captain!");
                                            found = true;
                                            break;
                                        }
                                    }
                                    break;
                                }
                            }
                            if (!found) {
                                Console.WriteLine("Nay, Scallywag!");                                                       //else is a foe
                            }
                        }
                        else {
                            Console.WriteLine("ERROR: Target name not provided.");
                        }
                        break;
                    case "EXIT": //exit
                        Console.WriteLine("Exiting!");
                        break;
                    default:
                        Console.WriteLine("ERROR: Invalid command.");                        
                        break;
                }//end switch
                //return; //remove
            }//end if
            Console.Read();
        }//end main

        public static char c1 { get; set; }
    }//end class proj
}//end namespace 


/*
 /*
             //conversion of parts of the file (Name, ...) to pig latin:
            //string var = "";
            //enum var {
            //    a, e, i, o, u, y
            //};   
            //extract info from file convert to pig latin, and create another file to add entire file to (with the partial conversion)
            //////switch (txtFile)
            //////{ 
            //////    case "a":
            //////        string text = "";
            //////    case "e":
            //////
            //////}
            
             Rules of pig latin: 
                For words that begin with consonant sounds (bcd fgh jklmn pqrst vwx z), 
                   the initial consonant or consonant cluster is moved to the end of the word, 
                   and "ay" is added:
             
                        "pig" → "igpay"
                        "banana" → "ananabay"
                        "trash" → "ashtray"
                        "happy" → "appyhay"
                        "duck" → "uckday"
                        "glove" → "oveglay"
              
                For words that begin with vowel sounds or silent letter, (aeiouy)   //ignore silent letter?
                    one just adds "way" to the end:
                
                        "egg" → "eggway"
                        "inbox" → "inboxway"
                        "eight" → "eightway"
 */
